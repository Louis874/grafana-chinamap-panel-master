{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","mapContainer","find","MapChart","newInstance","element","calRoundSize","val","type","Min_Size","minSize","maxSize","value","province","Math","round","chart","mapType","container","echarts","init","option","title","text","left","textStyle","color","tooltip","trigger","padding","backgroundColor","formatter","params","tipVal","tipHTML","data","Array","length","push","name","seriesName","join","legend","orient","selectedMode","selected","toolbox","show","itemSize","feature","myTool1","currentProvince","icon","onclick","pointName","undefined","city","areaId","update","i","len","templateSrv","variables","variable","setValue","variableSrvT","variableUpdated","myTool2","updateMap","iconStyle","emphasis","visualMap","min","max","top","calculable","seriesIndex","inRange","geo","map","label","itemStyle","normal","borderColor","borderWidth","areaColor","x","y","r","colorStops","offset","globalCoord","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","aspectScale","series","on","obj","currSeriesName","seriesNameObj","dataType","indexOf","destProvinceData","provinceData","dstSeries","citiesData","destCityData1","destCityData2","isDirectCity","includes","popList","currPopData","popData","filter","parent","popIdList","id","popNameList","selectedInfo","selKey","index","seriesNode","coordinateSystem","symbolSize","showEffectOn","rippleEffect","period","scale","brushType","hoverAnimation","position","lengenNode","setOption","resize","dispose","console","log","events","render","renderingCompleted","window","setTimeout"],"mappings":"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","file":"rendering.js","sourcesContent":["import echarts from './lib/echarts.min';\n\nexport default function link(scope, elem, attrs, ctrl) {\n    const mapContainer = elem.find('.chinamap-panel');\n    // 简单的饼图自动绘图工具\n    let MapChart = (function() {\n        //text, subtext, legends, values, message\n        let newInstance = function(element) {\n            // 计算地图上的圆圈大小\n            let calRoundSize = function(val, type) {\n                const Min_Size = 10;\n                let minSize = 0;\n                let maxSize = 0;\n                let value = val[2];\n\n                if (ctrl.province) {\n                    minSize = ctrl['minPopData'][type];\n                    maxSize = ctrl['maxPopData'][type];\n                } else {\n                    minSize = ctrl['minProvinceData'][type];\n                    maxSize = ctrl['maxProvinceData'][type];\n                }\n\n                if (minSize === maxSize) {\n                    return 12;\n                } else {\n                    return Min_Size + Math.round((value - minSize) / (maxSize - minSize) * 5);\n                }\n            };\n            let chart = {};\n            let mapType = [\n                'china',\n                // 23个省\n                '广东', '青海', '四川', '海南', '陕西',\n                '甘肃', '云南', '湖南', '湖北', '黑龙江',\n                '贵州', '山东', '江西', '河南', '河北',\n                '山西', '安徽', '福建', '浙江', '江苏',\n                '吉林', '辽宁',\n                //'台湾',\n                // 5个自治区\n                '新疆', '广西', '宁夏', '内蒙古', '西藏',\n                // 4个直辖市\n                '北京', '天津', '上海', '重庆',\n                // 2个特别行政区\n                '香港', '澳门',\n            ];\n\n            chart.container = echarts.init(element[0], 'dark');\n            chart.option = {\n                title: {\n                    text: '全国地图',\n                    left: 'center',\n                    textStyle: {\n                        color: '#fff',\n                    },\n                },\n                tooltip: {\n                    trigger: 'item',\n                    padding: 10,\n                    backgroundColor: 'rgba(20,20,20,0.8)',\n                    formatter: function(params) {\n                        let tipVal = 0;\n                        let tipHTML = [];\n\n                        if (params) {\n                            if (params.data && params.data.value instanceof Array && params.data.value.length > 2) {\n                                tipVal = params.data.value[2];\n                            }\n\n                            tipHTML.push('<div style=\"font-size: 16px;color: ', params.color, ';\">', params.name, '</div>');\n                            tipHTML.push(params.seriesName, '：', tipVal);\n                        }\n\n                        return tipHTML.join('');\n                    },\n                },\n                legend: {\n                    orient: 'vertical',\n                    left: 'right',\n                    data: [],\n                    selectedMode: 'single',\n                    selected: {\n                    },\n                },\n                toolbox: {\n                    show: true,\n                    itemSize: 30,\n                    feature: {\n                        myTool1: {\n                            show: ctrl.currentProvince === 'china',\n                            title: '返回',\n                            icon: 'path://M512 64C264.8 64 64 264.8 64 512s200.8 448 448 448 448-200.8 448-448S759.2 64 512 '\n                            + '64z m158.4 674.4L625.6 784l-272-272 272-272 45.6 45.6L444 512l226.4 226.4z',\n                            onclick: function() {\n                                ctrl.pointName = '';\n                                ctrl.province = undefined;\n                                ctrl.city = undefined;\n                                ctrl.areaId = undefined;\n                                chart.update();\n\n                                // 变量置为All\n                                for (let i = 0, len = ctrl.templateSrv.variables.length; i < len; i++) {\n                                    let variable = ctrl.templateSrv.variables[i];\n\n                                    if (variable.name === 'popId' || variable.name === 'popName') {\n                                        variable.setValue({\n                                            text: 'All',\n                                            value: ['$__all'],\n                                        });\n                                        ctrl.variableSrvT.variableUpdated(variable, true);\n                                    } else if (variable.name === 'areaName') {\n                                        variable.setValue({\n                                            text: '全国',\n                                            value: '全国',\n                                        });\n                                        ctrl.variableSrvT.variableUpdated(variable, true);\n                                    }\n                                }\n                            }\n                        },\n                        myTool2: {\n                            show: ctrl.currentProvince !== 'china',\n                            title: '主页',\n                            icon: 'path://M953.001481 565.581336 557.839513 128.84653c-12.284791-13.568017-28.827559-21.042245-46.639227-21.042245l0 0c-17.768689 0-34.328853 7.474228-46.635133 21.042245L69.394998 565.581336c-8.283664 9.182127-7.560186 23.294542 1.575892 31.600719 4.282536 3.891633 9.657964 5.771447 14.990413 5.771447 6.076392 0 12.173251-2.447748 16.610306-7.390317l95.282087-105.310487 0 358.867344c0 37.017078 30.116925 67.13298 67.137073 67.13298l492.333078 0c37.019125 0 67.13605-30.116925 67.13605-67.13298L824.459896 490.25372l95.281063 105.310487c8.266267 9.179057 22.423709 9.925047 31.606859 1.577938 9.17087-8.351202 9.870812-22.423709 1.570775-31.601742L953.001481 565.581336zM600.715019 871.498724 421.686577 871.498724 421.686577 670.089551c0-12.329816 10.031471-22.379707 22.378683-22.379707l134.2721 0c12.325723 0 22.378683 10.04989 22.378683 22.379707L600.716043 871.498724zM779.744485 849.120041c0 12.322653-10.053983 22.37766-22.38073 22.37766L645.471362 871.497701 645.471362 670.089551c0-37.024242-30.114878-67.13605-67.135026-67.13605L444.064236 602.953502c-37.019125 0-67.134003 30.112832-67.134003 67.13605l0 201.408149L265.035794 871.497701c-12.346189 0-22.37766-10.055007-22.37766-22.37766L242.658134 440.796308l255.123538-281.963837c3.672646-4.086062 8.460696-6.315846 13.417591-6.315846 4.960988 0 9.745968 2.229784 13.418614 6.315846l255.125585 281.963837L779.743462 849.120041z',\n                            onclick: function() {\n                                ctrl.province = ctrl.currentProvince;\n                                ctrl.pointName = ctrl.currentProvince;\n                                chart.updateMap();\n                                chart.update();\n                            }\n                        }\n                    },\n                    iconStyle: {\n                        color: 'rgb(255, 255, 255)',\n                    },\n                    emphasis: {\n                        iconStyle: {\n                            color: 'rgb(255, 255, 0)',\n                        },\n                    },\n                    left: '1%',\n                },\n                visualMap: {\n                    show: true,\n                    min: 0,\n                    max: 2000,\n                    left: '10%',\n                    top: 'bottom',\n                    calculable: true,\n                    seriesIndex: [1],\n                    inRange: {\n                        color: ['#04387b', '#467bc0'] // 蓝绿\n                    }\n                },\n                geo: {\n                    map: 'china',\n                    selectedMode: 'single',\n                    label: {\n                        show: true,\n                        color: '#fff',\n                    },\n                    itemStyle: {\n                        normal: {\n                            borderColor: 'rgba(147, 235, 248, 1)',\n                            borderWidth: 1,\n                            areaColor: {\n                                type: 'radial',\n                                x: 0.5,\n                                y: 0.5,\n                                r: 0.8,\n                                colorStops: [{\n                                    offset: 0,\n                                    color: 'rgba(147, 235, 248, 0)', // 0% 处的颜色\n                                }, {\n                                    offset: 1,\n                                    color: 'rgba(147, 235, 248, .2)', // 100% 处的颜色\n                                }],\n                                globalCoord: false, // 缺省为 false\n                            },\n                            shadowColor: 'rgba(128, 217, 248, 1)',\n                            // shadowColor: 'rgba(255, 255, 255, 1)',\n                            shadowOffsetX: -2,\n                            shadowOffsetY: 2,\n                            shadowBlur: 10,\n                        },\n                        emphasis: {\n                            areaColor: '#389BB7',\n                            borderWidth: 0,\n                        },\n                    },\n                    // roam: true,\n                    aspectScale: 0.95,\n                },\n                series: [\n\n                ],\n            };\n\n            chart.container.on('legendselectchanged', function(obj) {\n                currSeriesName = obj.name;\n            });\n\n            let seriesNameObj = {} ;\n            let currSeriesName = '';\n\n            chart.container.on('click', function(params) {\n                //获取省市名称\n\n                seriesNameObj = ctrl.seriesNameObj || {} ;\n\n                if( currSeriesName === '') {\n\n                    for (let dataType in seriesNameObj) {\n                        currSeriesName = dataType;\n                        break;\n                    }\n                }\n\n                if (mapType.indexOf(params.name) !== -1) {\n                    let destProvinceData = ctrl.provinceData[seriesNameObj[currSeriesName]].find(x => x.name === params.name);\n\n                    if (!!!destProvinceData) {\n                        //如果该省份没有数据，直接返回\n                        return;\n                    }\n\n                    ctrl.province = params.name;\n                    ctrl.city = undefined;\n                } else {\n                    let dstSeries = chart.option.series.find(x => x.name === currSeriesName);\n                    if(!!! dstSeries){\n                        return ;\n                    }\n                    let citiesData = dstSeries.data;\n\n                    if (citiesData instanceof Array && params.name) {\n                        let destCityData1 = citiesData.find(x => x.name === params.name);\n                        let destCityData2 = citiesData.find(x => x.city === params.name);\n\n                        if (!!!destCityData1 && !!!destCityData2) {\n                            return;\n                        }\n                    }\n\n                    ctrl.city = params.name;\n                }\n\n                ctrl.isDirectCity = ['北京', '天津', '上海', '重庆', '香港', '澳门'].includes(params.name);\n                ctrl.pointName = params.name;\n                chart.update();\n                chart.updateMap();\n            });\n\n            chart.updateMap = function() {\n                if (!ctrl.pointName) {\n                    return;\n                }\n                let popList = [];\n                seriesNameObj = ctrl.seriesNameObj || {} ;\n\n                if( currSeriesName === '') {\n\n                    for (let dataType in seriesNameObj) {\n                        currSeriesName = dataType;\n                        break;\n                    }\n                }\n                let currPopData = ctrl.popData[seriesNameObj[currSeriesName]];\n\n                if (typeof(ctrl.city) !== 'undefined' && !ctrl.isDirectCity) {\n                    popList = currPopData.filter(x => x.city === ctrl.city);\n\n                    if (!popList || popList.length === 0) {\n                        popList = currPopData.filter(x => x.name === ctrl.city);\n                    }\n                } else {\n                    popList = currPopData.filter(x => x.parent === ctrl.province);\n                }\n\n                for (let i = 0, len = ctrl.templateSrv.variables.length; i < len; i++) {\n                    let variable = ctrl.templateSrv.variables[i];\n\n                    if (variable.name === 'popId') {\n                        let popIdList = popList.map(x => '' + x.id);\n                        variable.setValue({\n                            text: popIdList.join(' + '),\n                            value: popIdList,\n                        });\n                        ctrl.variableSrvT.variableUpdated(variable, true);\n                    } else if (variable.name === 'popName') {\n                        let popNameList = popList.map(x => '' + x.name);\n                        variable.setValue({\n                            text: popNameList.join(' + '),\n                            value: popNameList,\n                        });\n                        ctrl.variableSrvT.variableUpdated(variable, true);\n                    } else if (variable.name === 'areaName') {\n                        variable.setValue({\n                            text: ctrl.pointName,\n                            value: ctrl.pointName,\n                        });\n                        ctrl.variableSrvT.variableUpdated(variable, true);\n                    }\n                }\n            };\n\n            //==================================================================================\n            // 刷新地图\n            //==================================================================================\n            chart.update = function() {\n                let selectedInfo = {};\n                for (let selKey in ctrl.seriesNameObj) {\n                    selectedInfo[selKey] = (selKey === currSeriesName);\n                }\n\n\n                if (typeof(ctrl.city) !== 'undefined' && ctrl.province !== 'china') {\n                    return;\n                    // chart.option.geo.map = ctrl.province;\n                    // chart.option.title.text = ctrl.city;\n                } else if (typeof(ctrl.province) !== 'undefined' && ctrl.province !== 'china') {\n                    chart.option.geo.map = ctrl.province;\n                    chart.option.title.text = ctrl.province;\n                    let index = 0 ;\n                    chart.option.series= [] ;\n                    chart.option.legend.data = [] ;\n\n                    for (let dataType in ctrl.popData) {\n\n                        let seriesNode = {\n                            name: dataType,\n                            type: 'effectScatter',\n                            coordinateSystem: 'geo',\n                            data: ctrl.popData[dataType].filter(x => x.parent === ctrl.province),\n                            symbolSize: function(val) {\n                                return calRoundSize(val, dataType);\n                            },\n                            showEffectOn: 'render',\n                            rippleEffect: {\n                                period: 15,\n                                scale: 4,\n                                brushType: 'fill',\n                            },\n                            hoverAnimation: true,\n                            label: {\n                                normal: {\n                                    formatter: function(params) {\n                                        return '['+params.name+'：'+params.value[2]+']';\n                                    },\n                                    color: 'red',\n                                    position: 'top',\n                                    show: true,\n                                },\n                                emphasis: {\n                                    show: true,\n                                },\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: '#f4e925',\n                                    shadowBlur: 10,\n                                    shadowColor: '#333',\n                                },\n                            },\n                        };\n                        chart.option.series.push(seriesNode);\n\n                        let lengenNode ={ name: dataType, icon: 'roundRect', textStyle: { color: '#f4e925' } };\n\n                        chart.option.legend.data.push(lengenNode);\n                        index= index + 1;\n                    }\n                    chart.option.legend.selected = selectedInfo;\n                } else {\n                    chart.option.geo.map = 'china';\n                    chart.option.title.text = '全国';\n                    let index = 0 ;\n\n                    chart.option.series= [] ;\n                    chart.option.legend.data = [] ;\n                    for (let dataType in ctrl.provinceData) {\n\n                        let seriesNode = {\n                            name: dataType,\n                            type: 'effectScatter',\n                            coordinateSystem: 'geo',\n                            data: ctrl.provinceData[dataType],\n                            symbolSize: function(val) {\n                                return calRoundSize(val, dataType);\n                            },\n                            showEffectOn: 'render',\n                            rippleEffect: {\n                                period: 15,\n                                scale: 4,\n                                brushType: 'fill',\n                            },\n                            hoverAnimation: true,\n                            label: {\n                                normal: {\n                                    formatter: function(params) {\n                                        return '['+params.name+'：'+params.value[2]+']';\n                                    },\n                                    color: 'red',\n                                    position: 'top',\n                                    show: true,\n                                },\n                                emphasis: {\n                                    show: true,\n                                },\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: '#f4e925',\n                                    shadowBlur: 10,\n                                    shadowColor: '#333',\n                                },\n                            },\n                        };\n                        chart.option.series.push(seriesNode);\n\n\n                        let lengenNode ={ name: dataType, icon: 'roundRect', textStyle: { color: '#f4e925' } };\n\n                        chart.option.legend.data.push(lengenNode);\n\n                        index= index + 1;\n                    }\n                    chart.option.legend.selected = selectedInfo;\n                }\n\n                chart.container.setOption(chart.option, false);\n                chart.container.resize();\n            };\n\n            chart.resize = function() {\n                chart.container.resize();\n            };\n\n            chart.dispose = function() {\n                chart.container.dispose();\n            };\n\n            if (ctrl.currentProvince !== 'china') {\n                ctrl.province = ctrl.currentProvince;\n                ctrl.pointName = ctrl.currentProvince;\n                chart.updateMap();\n            }\n            chart.update();\n            return chart;\n        };\n        let show  = function () {\n            console.log(\"render -init --6 \" + ctrl.seriesNameObj)\n        }\n\n        return {\n            newInstance: newInstance,\n            show:show\n        };\n    })();\n\n    ctrl.events.on('render', () => {\n        console.log(\"ctrl events on render!!\");\n        render();\n        ctrl.renderingCompleted();\n    });\n\n    function render() {\n        console.log(\"render!!\");\n        if (!ctrl.map) {\n            ctrl.map = MapChart.newInstance(mapContainer, {});\n            //ctrl.map.update();\n            window.setTimeout(()=>{\n                ctrl.map.container.setOption(ctrl.map.option);\n                ctrl.map.update();\n            },500);\n        } else {\n            ctrl.map.update();\n            //MapChart.show();\n        }\n\n        //布局地图\n    }\n};\n"]}