{"version":3,"sources":["../src/chinamap_ctrl.js"],"names":["MetricsPanelCtrl","echarts","rendering","darkJson","chinaJson","chinaLocs","anhuiData","aomenData","beijingData","chongqingData","fujianData","gansuData","guangdongData","guangxiData","guizhouData","hainanData","hebeiData","heilongjiangData","henanData","hubeiData","hunanData","jiangsuData","jiangxiData","jilinData","liaoningData","neimengguData","ningxiaData","qinghaiData","shandongData","shanghaiData","shanxiData","shanxi1Data","sichuanData","taiwanData","tianjinData","xianggangData","xinjiangData","xizangData","yunnanData","zhejiangData","registerMap","registerTheme","ChinaMapCtrl","$scope","$injector","$rootScope","backendSrv","currentProvince","rootScope","templateSrv","get","variableSrvT","events","on","onDataReceived","bind","popData","type","that","demoData","forEach","item","pop","provinceId","key","substr","dstProvince","find","x","id","children","Array","dstCity","currLog","currLat","log","lat","parseFloat","push","name","city","parent","value","destProvince","province","length","provinceVal","Math","round","provinceData","popTypeList","map","minPopData","min","apply","maxPopData","max","provincePopTypeList","minProvinceData","maxProvinceData","dataList","console","srcData","i","rows","index","j","cells","cell","hasOwnProperty","seriesNameObj","popData2","dataType","setData","render","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"chinamap_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport echarts from './lib/echarts.min';\r\nimport rendering from './rendering';\r\n\r\nimport darkJson from './lib/map/dark';\r\nimport chinaJson from './lib/map/china';\r\nimport chinaLocs from './lib/map/china-city-loc';\r\n\r\nimport anhuiData from './lib/map/province/anhui';\r\necharts.registerMap('安徽', anhuiData);\r\nimport aomenData from './lib/map/province/aomen';\r\necharts.registerMap('澳门', aomenData);\r\nimport beijingData from './lib/map/province/beijing';\r\necharts.registerMap('北京', beijingData);\r\nimport chongqingData from './lib/map/province/chongqing';\r\necharts.registerMap('重庆', chongqingData);\r\nimport fujianData from './lib/map/province/fujian';\r\necharts.registerMap('福建', fujianData);\r\nimport gansuData from './lib/map/province/gansu';\r\necharts.registerMap('甘肃', gansuData);\r\nimport guangdongData from './lib/map/province/guangdong';\r\necharts.registerMap('广东', guangdongData);\r\nimport guangxiData from './lib/map/province/guangxi';\r\necharts.registerMap('广西', guangxiData);\r\nimport guizhouData from './lib/map/province/guizhou';\r\necharts.registerMap('贵州', guizhouData);\r\nimport hainanData from './lib/map/province/hainan';\r\necharts.registerMap('海南', hainanData);\r\nimport hebeiData from './lib/map/province/hebei';\r\necharts.registerMap('河北', hebeiData);\r\nimport heilongjiangData from './lib/map/province/heilongjiang';\r\necharts.registerMap('黑龙江', heilongjiangData);\r\nimport henanData from './lib/map/province/henan';\r\necharts.registerMap('河南', henanData);\r\nimport hubeiData from './lib/map/province/hubei';\r\necharts.registerMap('湖北', hubeiData);\r\nimport hunanData from './lib/map/province/hunan';\r\necharts.registerMap('湖南', hunanData);\r\nimport jiangsuData from './lib/map/province/jiangsu';\r\necharts.registerMap('江苏', jiangsuData);\r\nimport jiangxiData from './lib/map/province/jiangxi';\r\necharts.registerMap('江西', jiangxiData);\r\nimport jilinData from './lib/map/province/jilin';\r\necharts.registerMap('吉林', jilinData);\r\nimport liaoningData from './lib/map/province/liaoning';\r\necharts.registerMap('辽宁', liaoningData);\r\nimport neimengguData from './lib/map/province/neimenggu';\r\necharts.registerMap('内蒙古', neimengguData);\r\nimport ningxiaData from './lib/map/province/ningxia';\r\necharts.registerMap('宁夏', ningxiaData);\r\nimport qinghaiData from './lib/map/province/qinghai';\r\necharts.registerMap('青海', qinghaiData);\r\nimport shandongData from './lib/map/province/shandong';\r\necharts.registerMap('山东', shandongData);\r\nimport shanghaiData from './lib/map/province/shanghai';\r\necharts.registerMap('上海', shanghaiData);\r\nimport shanxiData from './lib/map/province/shanxi';\r\necharts.registerMap('山西', shanxiData);\r\nimport shanxi1Data from './lib/map/province/shanxi1';\r\necharts.registerMap('陕西', shanxi1Data);\r\nimport sichuanData from './lib/map/province/sichuan';\r\necharts.registerMap('四川', sichuanData);\r\nimport taiwanData from './lib/map/province/taiwan';\r\necharts.registerMap('台湾', taiwanData);\r\nimport tianjinData from './lib/map/province/tianjin';\r\necharts.registerMap('天津', tianjinData);\r\nimport xianggangData from './lib/map/province/xianggang';\r\necharts.registerMap('香港', xianggangData);\r\nimport xinjiangData from './lib/map/province/xinjiang';\r\necharts.registerMap('新疆', xinjiangData);\r\nimport xizangData from './lib/map/province/xizang';\r\necharts.registerMap('西藏', xizangData);\r\nimport yunnanData from './lib/map/province/yunnan';\r\necharts.registerMap('云南', yunnanData);\r\nimport zhejiangData from './lib/map/province/zhejiang';\r\necharts.registerMap('浙江', zhejiangData);\r\n\r\necharts.registerTheme('dark', darkJson);\r\necharts.registerMap('china', chinaJson);\r\n\r\nexport class ChinaMapCtrl extends MetricsPanelCtrl {\r\n    constructor($scope, $injector, $rootScope, backendSrv) {\r\n        super($scope, $injector);\r\n        //backendSrv.get(`/api/org/preferences`).then(prefs => {\r\n        //    if (prefs && prefs.area) {\r\n        //         this.currentProvince = prefs.area;\r\n        //    }\r\n\r\n        if (!this.currentProvince) {\r\n            this.currentProvince = 'china';\r\n        }\r\n\r\n        this.rootScope = $rootScope;\r\n        this.templateSrv = $injector.get('templateSrv');\r\n        this.variableSrvT = $injector.get('variableSrv');\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n       // });\r\n    }\r\n\r\n    setData(popData, type) {\r\n        let that = this;\r\n        let demoData = [\r\n            {'key': '北京', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '上海', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '天津', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '重庆', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '河北', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '山西', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '辽宁', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '吉林', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '黑龙江', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '浙江', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '福建', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '山东', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '河南', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '湖北', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '湖南', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '广东', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '海南', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '四川', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '贵州', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '云南', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '江西', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '陕西', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '青海', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '甘肃', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '广西', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '新疆', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '内蒙古', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '西藏', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '宁夏', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '台湾', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '香港', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '澳门', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '安徽', 'log': 0, 'lat': 0, 'children': []},\r\n            {'key': '江苏', 'log': 0, 'lat': 0, 'children': []}\r\n        ];\r\n\r\n        demoData.forEach(function (item) {\r\n            item[type] = 0;\r\n        });\r\n\r\n        popData.forEach(function (pop) {\r\n            let provinceId = pop.key.substr(0, 2) + '0000';\r\n            let dstProvince = chinaLocs.find(x => x.id === provinceId);\r\n\r\n            if (dstProvince) {\r\n                if (dstProvince.children instanceof Array) {\r\n                    let dstCity = dstProvince.children.find(x => x.id === pop.key);\r\n\r\n                    if (dstCity) {\r\n                        let currLog = 0;\r\n                        let currLat = 0;\r\n\r\n                        if (pop.log) {\r\n                            currLog = pop.log;\r\n                            currLat = pop.lat;\r\n                        } else {\r\n                            currLog = parseFloat(dstCity.log);\r\n                            currLat = parseFloat(dstCity.lat);\r\n                        }\r\n\r\n                        that.popData[type].push({\r\n                            id: pop.id,\r\n                            name: pop.name || dstCity.name,\r\n                            city: dstCity.name,\r\n                            parent: dstProvince.name,\r\n                            value: [currLog, currLat, pop[type]]\r\n                        });\r\n                    }\r\n                } else {\r\n                    // 直辖市\r\n                    let currLog = 0;\r\n                    let currLat = 0;\r\n\r\n                    if (pop.log) {\r\n                        currLog = pop.log;\r\n                        currLat = pop.lat;\r\n                    } else {\r\n                        currLog = parseFloat(dstProvince.log);\r\n                        currLat = parseFloat(dstProvince.lat);\r\n                    }\r\n\r\n                    that.popData[type].push({\r\n                        id: pop.id,\r\n                        name: pop.name || dstProvince.name,\r\n                        city: dstProvince.name,\r\n                        parent: dstProvince.name,\r\n                        value: [currLog, currLat, pop[type]]\r\n                    });\r\n                }\r\n\r\n                let destProvince = demoData.find(x => x.key === dstProvince.name);\r\n\r\n                if (destProvince) {\r\n                    destProvince.log = dstProvince.log;\r\n                    destProvince.lat = dstProvince.lat;\r\n                    destProvince[type] += pop[type];\r\n                    destProvince.children.push(pop);\r\n                }\r\n            }\r\n        });\r\n\r\n        demoData.forEach(function (province) {\r\n            if (province.children.length > 0) {\r\n                let provinceVal = Math.round(100 * province[type]) / 100;\r\n\r\n                that.provinceData[type].push({\r\n                    name: province.key,\r\n                    value: [parseFloat(province.log), parseFloat(province.lat), provinceVal]\r\n                });\r\n            }\r\n        });\r\n\r\n        let popTypeList = popData.map(x => x[type]);\r\n        this.minPopData[type] = Math.min.apply(null, popTypeList);\r\n        this.maxPopData[type] = Math.max.apply(null, popTypeList);\r\n\r\n        let provincePopTypeList = this.provinceData[type].map(x => x.value[2]);\r\n        this.minProvinceData[type] = Math.min.apply(null, provincePopTypeList);\r\n        this.maxProvinceData[type] = Math.max.apply(null, provincePopTypeList);\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n\r\n        console.log(\"onDataReceived:\" + dataList);\r\n        let srcData = {};\r\n        for ( let i = 0; i< dataList.length; i++){\r\n            let rows = dataList[i].rows;\r\n            let  index = 0;\r\n            for ( let j = 0 ;j<rows.length;j++){\r\n                let cells = rows[j];\r\n                if(cells.length>3){\r\n                    let cell = {\"key\": cells[2] + \"\",\"id\": index};\r\n                    cell[cells[3]] = cells[1];\r\n                    if(!srcData.hasOwnProperty(cells[3])){\r\n                        srcData[cells[3]] = [] ;\r\n                    }\r\n                    srcData[cells[3]].push(cell);\r\n                }\r\n                index = index + 1;\r\n            }\r\n\r\n        }\r\n/**\r\n        let srcData2 = {\r\n            \"中国移动\": [\r\n                {key: '441400', \"中国移动\": 20},\r\n                {key: '441200', \"中国移动\": 80},\r\n                {key: '320800', \"中国移动\": 90},\r\n                {key: '320600', \"中国移动\": 30},\r\n                {key: '232700', \"中国移动\": 20},\r\n                {key: '231000', \"中国移动\": 70},\r\n                {name: '喀什001', key: '653100', 'log': 75.94, 'lat': 39.52, \"中国移动\": 20},\r\n                {name: '喀什002', key: '653100', 'log': 76.50, 'lat': 39, \"中国移动\": 20},\r\n                {key: '650200', \"中国移动\": 60}\r\n            ],\r\n            \"中国石油\": [\r\n                {key: '441400', \"中国石油\": 50},\r\n                {key: '441200', \"中国石油\": 10},\r\n                {key: '320800', \"中国石油\": 20},\r\n                {key: '320600', \"中国石油\": 30},\r\n                {key: '232700', \"中国石油\": 80},\r\n                {key: '231000', \"中国石油\": 60},\r\n                {key: '653100', 'log': 75.94, 'lat': 39.52, \"中国石油\": 40},\r\n                {key: '653100', 'log': 76.50, 'lat': 39, \"中国石油\": 20},\r\n                {key: '650200', \"中国石油\": 90}\r\n            ]\r\n        };\r\n**/\r\n        let seriesNameObj ={};\r\n\r\n        this.seriesNameObj = seriesNameObj;\r\n\r\n        let provinceData = {};\r\n        let popData2 = {};\r\n        let minProvinceData = {};\r\n        let maxProvinceData = {};\r\n        let minPopData = {};\r\n        let maxPopData = {};\r\n\r\n        this.provinceData = provinceData;\r\n        this.popData = popData2;\r\n        this.minProvinceData = minProvinceData ;\r\n        this.maxProvinceData =maxProvinceData ;\r\n        this.minPopData  = minPopData;\r\n        this.maxPopData  = maxPopData ;\r\n\r\n        for (let dataType in srcData) {\r\n\r\n            this.seriesNameObj[dataType] = dataType;\r\n\r\n            this.provinceData[dataType] = [];\r\n            this.popData[dataType] = [];\r\n            this.minProvinceData[dataType] = 0 ;\r\n            this.maxProvinceData[dataType] = 0 ;\r\n            this.minPopData[dataType] = 0 ;\r\n            this.maxPopData[dataType] = 0 ;\r\n\r\n            this.setData(srcData[dataType], dataType);\r\n        }\r\n\r\n        console.log(\"data recevie after, rendering!!\");\r\n\r\n        this.render();\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        console.log(\"ctrl rendering!!\");\r\n        rendering(scope, elem, attrs, ctrl);\r\n    }\r\n}\r\n\r\nChinaMapCtrl.templateUrl = 'module.html';"]}